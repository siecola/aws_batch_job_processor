buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

group = 'siecola'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

bootJar {
	baseName = 'aws_batch_job_processor'
	version =  '0.1.0'
}

repositories {
	mavenCentral()
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version: '2.1.4.RELEASE'

    compile group: 'com.github.derjust', name: 'spring-data-dynamodb', version: '5.0.3'

	compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.546'
	compile group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.11.546'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}
docker {
	name "${project.group}/${bootJar.baseName}"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}